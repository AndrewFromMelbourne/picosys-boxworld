#!/usr/bin/env python3
""" puzzle_image """

from PIL import Image

# --------------------------------------------------------------------------------------------------------

thinFontWidth = [
    3, 1, 4, 6, 5, 6, 6, 2, 3, 3, 7, 5, 2, 5, 1, 7,
    6, 3, 5, 5, 6, 5, 5, 5, 5, 5, 1, 3, 4, 5, 4, 5,
    6, 7, 6, 5, 5, 5, 5, 6, 5, 1, 5, 5, 5, 6, 5, 5,
    6, 6, 6, 5, 5, 6, 5, 6, 7, 5, 5, 4, 6, 4, 7, 8,
    3, 6, 6, 6, 6, 6, 5, 6, 5, 1, 5, 5, 3, 6, 5, 5,
    5, 5, 5, 5, 4, 5, 5, 6, 5, 5, 5, 5, 1, 5, 8, 6
]

thinFont = [
    [ 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 ],
    [ 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b00000000, 0b10000000, 0b00000000 ],
    [ 0b10010000, 0b10010000, 0b10010000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 ],
    [ 0b01001000, 0b01001000, 0b11111100, 0b01001000, 0b11111100, 0b01001000, 0b01001000, 0b00000000 ],
    [ 0b00100000, 0b01111000, 0b10100000, 0b01110000, 0b00101000, 0b11110000, 0b00100000, 0b00000000 ],
    [ 0b00000000, 0b10000100, 0b10001000, 0b00010000, 0b00100000, 0b01000100, 0b10000100, 0b00000000 ],
    [ 0b01110000, 0b10001000, 0b11110000, 0b01110100, 0b10001000, 0b10001000, 0b01110100, 0b00000000 ],
    [ 0b01000000, 0b01000000, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 ],
    [ 0b00100000, 0b01000000, 0b10000000, 0b10000000, 0b10000000, 0b01000000, 0b00100000, 0b00000000 ],
    [ 0b10000000, 0b01000000, 0b00100000, 0b00100000, 0b00100000, 0b01000000, 0b10000000, 0b00000000 ],
    [ 0b00000000, 0b10010010, 0b01010100, 0b00111000, 0b00111000, 0b01010100, 0b10010010, 0b00000000 ],
    [ 0b00000000, 0b00100000, 0b00100000, 0b11111000, 0b00100000, 0b00100000, 0b00000000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b01000000, 0b01000000, 0b10000000 ],
    [ 0b00000000, 0b00000000, 0b00000000, 0b11111000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b10000000, 0b10000000, 0b00000000 ],
    [ 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00100000, 0b01000000, 0b10000000, 0b00000000 ],
    [ 0b01111000, 0b10000100, 0b10001100, 0b10010100, 0b10100100, 0b11000100, 0b01111000, 0b00000000 ],
    [ 0b01000000, 0b11000000, 0b01000000, 0b01000000, 0b01000000, 0b01000000, 0b11100000, 0b00000000 ],
    [ 0b01110000, 0b10001000, 0b00001000, 0b00110000, 0b01000000, 0b10000000, 0b11111000, 0b00000000 ],
    [ 0b11111000, 0b00010000, 0b00100000, 0b00010000, 0b00001000, 0b10001000, 0b01110000, 0b00000000 ],
    [ 0b00011000, 0b00101000, 0b01001000, 0b10001000, 0b11111100, 0b00001000, 0b00001000, 0b00000000 ],
    [ 0b11111000, 0b10000000, 0b11110000, 0b00001000, 0b00001000, 0b00001000, 0b11110000, 0b00000000 ],
    [ 0b00110000, 0b01000000, 0b10000000, 0b11110000, 0b10001000, 0b10001000, 0b01110000, 0b00000000 ],
    [ 0b11111000, 0b00001000, 0b00010000, 0b00010000, 0b00100000, 0b00100000, 0b00100000, 0b00000000 ],
    [ 0b01110000, 0b10001000, 0b10001000, 0b01110000, 0b10001000, 0b10001000, 0b01110000, 0b00000000 ],
    [ 0b01110000, 0b10001000, 0b10001000, 0b01111000, 0b00001000, 0b00010000, 0b01100000, 0b00000000 ],
    [ 0b00000000, 0b10000000, 0b10000000, 0b00000000, 0b00000000, 0b10000000, 0b10000000, 0b00000000 ],
    [ 0b00000000, 0b00100000, 0b00100000, 0b00000000, 0b00000000, 0b00100000, 0b01000000, 0b10000000 ],
    [ 0b00010000, 0b00100000, 0b01000000, 0b10000000, 0b01000000, 0b00100000, 0b00010000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b11111000, 0b00000000, 0b00000000, 0b11111000, 0b00000000, 0b00000000 ],
    [ 0b10000000, 0b01000000, 0b00100000, 0b00010000, 0b00100000, 0b01000000, 0b10000000, 0b00000000 ],
    [ 0b01110000, 0b10001000, 0b00001000, 0b00010000, 0b00100000, 0b00000000, 0b00100000, 0b00000000 ],
    [ 0b01111000, 0b10000100, 0b10011100, 0b10100100, 0b10011100, 0b10000000, 0b01111000, 0b00000000 ],
    [ 0b00010000, 0b00101000, 0b00101000, 0b01000100, 0b01111100, 0b10000010, 0b10000010, 0b00000000 ],
    [ 0b11111000, 0b10000100, 0b10000100, 0b11111000, 0b10000100, 0b10000100, 0b11111000, 0b00000000 ],
    [ 0b01111000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b01111000, 0b00000000 ],
    [ 0b11100000, 0b10010000, 0b10001000, 0b10001000, 0b10001000, 0b10010000, 0b11100000, 0b00000000 ],
    [ 0b11111000, 0b10000000, 0b10000000, 0b11110000, 0b10000000, 0b10000000, 0b11111000, 0b00000000 ],
    [ 0b11111000, 0b10000000, 0b10000000, 0b11110000, 0b10000000, 0b10000000, 0b10000000, 0b00000000 ],
    [ 0b01111100, 0b10000000, 0b10000000, 0b10000100, 0b10000100, 0b10000100, 0b01111100, 0b00000000 ],
    [ 0b10001000, 0b10001000, 0b10001000, 0b11111000, 0b10001000, 0b10001000, 0b10001000, 0b00000000 ],
    [ 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b00000000 ],
    [ 0b00001000, 0b00001000, 0b00001000, 0b00001000, 0b00001000, 0b10001000, 0b01110000, 0b00000000 ],
    [ 0b10001000, 0b10010000, 0b10100000, 0b11000000, 0b10100000, 0b10010000, 0b10001000, 0b00000000 ],
    [ 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b11111000, 0b00000000 ],
    [ 0b10000100, 0b11001100, 0b10110100, 0b10000100, 0b10000100, 0b10000100, 0b10000100, 0b00000000 ],
    [ 0b10001000, 0b11001000, 0b10101000, 0b10011000, 0b10001000, 0b10001000, 0b10001000, 0b00000000 ],
    [ 0b01110000, 0b10001000, 0b10001000, 0b10001000, 0b10001000, 0b10001000, 0b01110000, 0b00000000 ],
    [ 0b11111000, 0b10000100, 0b10000100, 0b11111000, 0b10000000, 0b10000000, 0b10000000, 0b00000000 ],
    [ 0b01111000, 0b10000100, 0b10000100, 0b10000100, 0b10010100, 0b01111000, 0b00010000, 0b00001100 ],
    [ 0b11111000, 0b10000100, 0b10000100, 0b11111000, 0b10010000, 0b10001000, 0b10000100, 0b00000000 ],
    [ 0b01111000, 0b10000000, 0b10000000, 0b01110000, 0b00001000, 0b00001000, 0b11110000, 0b00000000 ],
    [ 0b11111000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00000000 ],
    [ 0b10000100, 0b10000100, 0b10000100, 0b10000100, 0b10000100, 0b10000100, 0b01111000, 0b00000000 ],
    [ 0b10001000, 0b10001000, 0b10001000, 0b01010000, 0b01010000, 0b00100000, 0b00100000, 0b00000000 ],
    [ 0b10000100, 0b10000100, 0b10000100, 0b10000100, 0b10110100, 0b11001100, 0b10000100, 0b00000000 ],
    [ 0b10000010, 0b01000100, 0b00101000, 0b00010000, 0b00101000, 0b01000100, 0b10000010, 0b00000000 ],
    [ 0b10001000, 0b10001000, 0b01010000, 0b00100000, 0b00100000, 0b00100000, 0b00100000, 0b00000000 ],
    [ 0b11111000, 0b00001000, 0b00010000, 0b00100000, 0b01000000, 0b10000000, 0b11111000, 0b00000000 ],
    [ 0b11110000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b11110000, 0b00000000 ],
    [ 0b10000000, 0b01000000, 0b00100000, 0b00010000, 0b00001000, 0b00000100, 0b00000000, 0b00000000 ],
    [ 0b11110000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b11110000, 0b00000000 ],
    [ 0b00010000, 0b00101000, 0b01000100, 0b10000010, 0b00000000, 0b00000000, 0b00000000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b11111111 ],
    [ 0b10000000, 0b01000000, 0b00100000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b01111000, 0b00000100, 0b01111100, 0b10000100, 0b01111100, 0b00000000 ],
    [ 0b10000000, 0b10000000, 0b10000000, 0b11111000, 0b10000100, 0b10000100, 0b11111000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b01111100, 0b10000000, 0b10000000, 0b10000000, 0b01111100, 0b00000000 ],
    [ 0b00000100, 0b00000100, 0b00000100, 0b01111100, 0b10000100, 0b10000100, 0b01111100, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b01111000, 0b10000100, 0b11111100, 0b10000000, 0b01111100, 0b00000000 ],
    [ 0b01110000, 0b10001000, 0b10000000, 0b11100000, 0b10000000, 0b10000000, 0b10000000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b01111100, 0b10000100, 0b10000100, 0b01111100, 0b00000100, 0b11111000 ],
    [ 0b10000000, 0b10000000, 0b10000000, 0b11110000, 0b10001000, 0b10001000, 0b10001000, 0b00000000 ],
    [ 0b10000000, 0b00000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b10000000, 0b00000000 ],
    [ 0b00001000, 0b00000000, 0b00001000, 0b00001000, 0b00001000, 0b10001000, 0b10001000, 0b01110000 ],
    [ 0b10000000, 0b10000000, 0b10001000, 0b10110000, 0b11000000, 0b10110000, 0b10001000, 0b00000000 ],
    [ 0b11000000, 0b01000000, 0b01000000, 0b01000000, 0b01000000, 0b01000000, 0b11100000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b11001100, 0b10110100, 0b10000100, 0b10000100, 0b10000100, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b11110000, 0b10001000, 0b10001000, 0b10001000, 0b10001000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b01110000, 0b10001000, 0b10001000, 0b10001000, 0b01110000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b11110000, 0b10001000, 0b10001000, 0b11110000, 0b10000000, 0b10000000 ],
    [ 0b00000000, 0b00000000, 0b01111000, 0b10001000, 0b10001000, 0b01111000, 0b00001000, 0b00001000 ],
    [ 0b00000000, 0b00000000, 0b10011000, 0b11100000, 0b10000000, 0b10000000, 0b10000000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b01111000, 0b10000000, 0b01110000, 0b00001000, 0b11110000, 0b00000000 ],
    [ 0b10000000, 0b10000000, 0b11100000, 0b10000000, 0b10000000, 0b10010000, 0b01100000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b10001000, 0b10001000, 0b10001000, 0b10001000, 0b01111000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b10001000, 0b10001000, 0b01010000, 0b01010000, 0b00100000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b10000100, 0b10000100, 0b10000100, 0b10110100, 0b01001000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b10001000, 0b01010000, 0b00100000, 0b01010000, 0b10001000, 0b00000000 ],
    [ 0b00000000, 0b00000000, 0b10001000, 0b10001000, 0b10001000, 0b11111000, 0b00001000, 0b11110000 ],
    [ 0b00000000, 0b00000000, 0b11111000, 0b00010000, 0b00100000, 0b01000000, 0b11111000, 0b00000000 ],
    [ 0b00011000, 0b00100000, 0b00100000, 0b11000000, 0b00100000, 0b00100000, 0b00011000, 0b00000000 ],
    [ 0b10000000, 0b10000000, 0b10000000, 0b00000000, 0b10000000, 0b10000000, 0b10000000, 0b00000000 ],
    [ 0b11000000, 0b00100000, 0b00100000, 0b00011000, 0b00100000, 0b00100000, 0b11000000, 0b00000000 ],
    [ 0b00110011, 0b11001100, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 ],
    [ 0b00000000, 0b00110000, 0b01001000, 0b10000100, 0b10000100, 0b10000100, 0b11111100, 0b00000000 ]
]

# --------------------------------------------------------------------------------------------------------

def drawChar(image, x, y, c, rgb):
    index = ord(c) - 32
    width = thinFontWidth[index]
    data = thinFont[index]

    for j in range(0, 8):
        byte = data[j]
        for i in range(0, width):
            if byte & 1 << (7 - i):
                image.putpixel((x + i, y + j), rgb)

    return width

# --------------------------------------------------------------------------------------------------------

def drawString(image, x, y, string, rgb):
    for c in string:
        x += 1 + drawChar(image, x, y, c, rgb)

    return x

# --------------------------------------------------------------------------------------------------------

def drawBattery(image, x, y, level):
    levelColour = (0x00, 0x00, 0xFF)
    batteryColour = (0xFF, 0xFF, 0xFF)
    blackColour = (0x00, 0x00, 0x00)

    for i in range(0, 12):
        image.putpixel((x + i, y + 0), batteryColour)
        image.putpixel((x + i, y + 7), batteryColour)

    for j in range(1, 7):
        image.putpixel((x + 0, y + j), batteryColour)
        image.putpixel((x + 11, y + j), batteryColour)

    for j in range(2, 6):
        image.putpixel((x + 12, y + j), batteryColour)
        image.putpixel((x + 13, y + j), batteryColour)

    for i in range(0, level):
        for j in range(0, 6):
            image.putpixel((x + i + 1, y + j + 1), levelColour)

    for i in range(level, 10):
        for j in range(0, 6):
            image.putpixel((x + i + 1, y + j + 1), blackColour)
# --------------------------------------------------------------------------------------------------------

def drawBoxworld(frame):

    image = Image.new("RGB", size=(240, 240))
    image.paste((0x18, 0x38, 0x54), (0, 0, 240, 240))

    # ----------------------------------------------------------------------------------------------------

    white = (0xFF, 0xFF, 0xFF)
    grey = (0x99, 0x99, 0x99)
    yellow = (0xFF, 0xFF, 0)

    fontHeight = 8
    halfScreenWidth = 120

    boardYstart = 10
    boardYend = boardYstart + (14 * 15)

    row1 = boardYend + 1
    row2 = row1 + fontHeight + 2

    x = drawString(image, 1, 1, "level:", yellow)
    drawString(image, x, 1, "1", white)

    x = drawString(image, halfScreenWidth, row1, "(A): ", yellow)
    drawString(image, x, row1, "next level", white)

    x = drawString(image, halfScreenWidth, row2, "(B): ", yellow)
    drawString(image, x, row2, "previous level", grey)

    x = drawString(image, 1, row1, "(X): ", yellow)
    drawString(image, x, row1, "undo box move", grey)

    x = drawString(image, 1, row2, "(Y): ", yellow)
    drawString(image, x, row2, "restart level", white)

    # ----------------------------------------------------------------------------------------------------

    drawBattery(image, 240 - 15, 1, 5)

    # ----------------------------------------------------------------------------------------------------

    for y, row in enumerate(board):
        for x, cell in enumerate(row):
            tile = tiles[cell]
            (width, height) = tile.size

            if width > 15:
                crop = (0 + (frame * 15), 0, 15 + (frame * 15), 15)
                tile = tile.crop(crop)

            image.paste(tile, (x * 15, boardYstart + (y * 15)))

    # ----------------------------------------------------------------------------------------------------

    image = image.resize((480, 480), resample=Image.Resampling.NEAREST)

    # ----------------------------------------------------------------------------------------------------

    return image

# --------------------------------------------------------------------------------------------------------

board = [
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x05, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x02, 0x01, 0x02, 0x05, 0x04, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x04, 0x05, 0x01, 0x02, 0x03, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x05, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ],
    [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ]
]

# --------------------------------------------------------------------------------------------------------

tileFiles = [
    "empty.png",
    "passage.png",
    "box.png",
    "player.png",
    "wall.png",
    "passageWithTarget.png",
    "boxOnTarget.png",
    "playerOnTarget.png"
]

tiles = []

# --------------------------------------------------------------------------------------------------------

for name in tileFiles:
    tile = Image.open(name)
    tiles.append(tile)

# --------------------------------------------------------------------------------------------------------

image0 = drawBoxworld(0)
image1 = drawBoxworld(1)
images = [ image1 ]

image0.save('boxworld.gif', save_all=True, append_images=images, optimize=True, duration=500, loop=0)

